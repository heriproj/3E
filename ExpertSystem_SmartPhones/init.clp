(import java.util.HashMap)
(set-reset-globals nil)
(defglobal ?*global_display_min* = 0)
(defglobal ?*global_display_max* = 0)
(defglobal ?*global_storage_min* = 0)
(defglobal ?*global_storage_max* = 0)
(defglobal ?*global_camera_min* = 0)
(defglobal ?*global_camera_max* = 0)
(defglobal ?*global_battery_min* = 0)
(defglobal ?*global_battery_max* = 0)
(defglobal ?*global_price_min* = 0)
(defglobal ?*global_price_max* = 0)
(defglobal ?*global_type* = undefined)
(defglobal ?*global_os* = undefined)
(defglobal ?*global_manufacturer* = undefined)
(defglobal ?*global_connectivity* = (create$ undefined))
(defglobal ?*global_io* = (create$ undefined))
(deffunction eq (?arg1 ?arg2)(printout t "Comparing " ?arg1 " and " ?arg2 crlf)(if (<> ?arg1 ?arg2) then (return FALSE)) else (return TRUE))
(deffunction eq_lists (?list1 ?list2)(printout t "Comparing " ?list1 " and " ?list2 crlf)(eq (length$ (intersection$ ?list1 ?list2))(length$ ?list1)))
(deftemplate device "Device" (slot name)(slot device_type)(slot manufacturer)(slot OS)(slot display_resolution (default 0))(slot storage)(slot camera)(multislot connectivity)(multislot input_output)(slot battery (default 0))(slot price (default 0)))
(defrule is_price "Checks price of device" (device {price < ?*global_price*})=>(printout t "WE found device type " ?*global_price* crlf))
(defrule is_type "Checks type of device" (device {device_type == ?*global_type*}(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule is_os "Checks OS of device" (device {OS == ?*global_os*}(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule is_manufacturer "Checks manufacturer of device" (device {manufacturer == ?*global_manufacturer*}(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule is_display "Checks display resolution of device" (device {display_resolution >= ?*global_display_min* && display_resolution <= ?*global_display_max*}(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule is_storage "Checks storage capacity of device" (device {storage >= ?*global_storage_min* && storage <= ?*global_storage_max*}(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule is_camera "Checks camera pixels of device" (device {camera >= ?*global_camera_min* && camera <= ?*global_camera_max*}(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule has_connectivity "Checks connectivity of device" (device (connectivity $?conn)(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))(test (eq_lists ?conn ?*global_connectivity*))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule has_input_output "Checks input/output capabilities of device" (device (input_output $?io)(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))(test (eq_lists ?io ?*global_io*))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule is_battery "Checks battery hours of device" (device {battery >= ?*global_battery_min* && battery <= ?*global_battery_max*}(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))
(defrule is_price "Checks price of device" (device {price >= ?*global_price_min* && price <= ?*global_price_max*}(name ?name)(device_type ?type)(manufacturer ?manufacturer)(OS ?os)(display_resolution ?display)(storage ?storage)(camera ?camera)(connectivity $?connectivity)(input_output $?input_output)(battery ?battery)(price ?price))=>(bind ?result (new java.util.HashMap))(?result put "name" ?name)(?result put "type" ?type)(?result put "manufacturer" ?manufacturer)(?result put "os" ?os)(?result put "display" ?display)(?result put "storage" ?storage)(?result put "camera" ?camera)(?result put "connectivity" ?connectivity)(?result put "io" ?input_output)(?result put "battery" ?battery)(?result put "price" ?price)(add ?result))